This is My note during testing A EXE *_^ : reference (Practical Malware Analysis)


****************************************************************************************************************************************
Typically DLL can export function to use by an executable,On the other hand, EXE is not designed to export any function
(it so rare). If you fund an EXE export a function(In Dependency walker) then you have to check.

If there is a (WSock32.dll or Ws_32.dll) in the exutable it mean (the EXE is accsessing the network or (C2C)) look for IP in IDA 


Pro Tips (If you run string command on EXE and few string shows ) this measn the EXE is packed or obfuscatedbut dont warry threr are 
some tool can unpacked the EXE if not then run it Dynamically 


Pro Tips: If the EXE has a function Called (CreatProcessA) it basically tells us the EXE will probably create another process
(Watch out additional process when running it)


Injection Malware: The malware first needs to target a process for injection (e.g. svchost.exe). This is usually done by searching
through processes by calling a trio of Application Program Interfaces (APIs): CreateToolhelp32Snapshot, Process32First,
and Process32Next.CreateToolhelp32Snapshot is an API used for enumerating heap or module states of a specified process or all processes, and it
returns a snapshot. Process32First retrieves information about the first process in the snapshot, and then Process32Next is
used in a loop to iterate through them. After finding the target process, the malware gets the handle of the target process
by calling OpenProcess.

The PE file header :
.text:contains instruction that CPU execute
.rdate: contains the import and export function(same Dependency walker  !) 
.idate: if present, it stored the import function. if not present you can find them in .rdata
.edate: if present, it stored export function. if not present you can find them in .rdata
.data: stored global variable 
.rsrc: stored resources used by an executable that is not considered part of it: such as logo image and strings 

Pro Tip( look for the compiled date of EXE , if old then it more likaly be found in VT! ) Use PEView.exe (rare malwear fake the
compiled date ! ) 


Using PEView: the most interesting information comes from the section header, which is in IMAGE_SECTION_HEADER in which it shows
each section(.text.rdata.etc) of the PE file. For Example, Virtual Size(tell us how much space is allocated for during loading 
process IN Memory).On the other hand,Raw data show how big the size need on the disk. NOTE!!: THESE two values should be usually
equal because datashould take up just as much as on disk.this is useful in detection packed EXE,  For Example, 
if the .text section is larger in memory than disk.








